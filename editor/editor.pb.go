// Code generated by protoc-gen-go. DO NOT EDIT.
// source: editor.proto

package editor

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Op struct {
	Type                 int32    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Version              int64    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Pos                  int64    `protobuf:"varint,3,opt,name=pos,proto3" json:"pos,omitempty"`
	Char                 int32    `protobuf:"varint,4,opt,name=char,proto3" json:"char,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Op) Reset()         { *m = Op{} }
func (m *Op) String() string { return proto.CompactTextString(m) }
func (*Op) ProtoMessage()    {}
func (*Op) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d780504008e31fd, []int{0}
}

func (m *Op) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Op.Unmarshal(m, b)
}
func (m *Op) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Op.Marshal(b, m, deterministic)
}
func (m *Op) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Op.Merge(m, src)
}
func (m *Op) XXX_Size() int {
	return xxx_messageInfo_Op.Size(m)
}
func (m *Op) XXX_DiscardUnknown() {
	xxx_messageInfo_Op.DiscardUnknown(m)
}

var xxx_messageInfo_Op proto.InternalMessageInfo

func (m *Op) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Op) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Op) GetPos() int64 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *Op) GetChar() int32 {
	if m != nil {
		return m.Char
	}
	return 0
}

type DocState struct {
	Version              int64    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Buffer               []byte   `protobuf:"bytes,2,opt,name=buffer,proto3" json:"buffer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DocState) Reset()         { *m = DocState{} }
func (m *DocState) String() string { return proto.CompactTextString(m) }
func (*DocState) ProtoMessage()    {}
func (*DocState) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d780504008e31fd, []int{1}
}

func (m *DocState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DocState.Unmarshal(m, b)
}
func (m *DocState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DocState.Marshal(b, m, deterministic)
}
func (m *DocState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocState.Merge(m, src)
}
func (m *DocState) XXX_Size() int {
	return xxx_messageInfo_DocState.Size(m)
}
func (m *DocState) XXX_DiscardUnknown() {
	xxx_messageInfo_DocState.DiscardUnknown(m)
}

var xxx_messageInfo_DocState proto.InternalMessageInfo

func (m *DocState) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *DocState) GetBuffer() []byte {
	if m != nil {
		return m.Buffer
	}
	return nil
}

type Nil struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nil) Reset()         { *m = Nil{} }
func (m *Nil) String() string { return proto.CompactTextString(m) }
func (*Nil) ProtoMessage()    {}
func (*Nil) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d780504008e31fd, []int{2}
}

func (m *Nil) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nil.Unmarshal(m, b)
}
func (m *Nil) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nil.Marshal(b, m, deterministic)
}
func (m *Nil) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nil.Merge(m, src)
}
func (m *Nil) XXX_Size() int {
	return xxx_messageInfo_Nil.Size(m)
}
func (m *Nil) XXX_DiscardUnknown() {
	xxx_messageInfo_Nil.DiscardUnknown(m)
}

var xxx_messageInfo_Nil proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Op)(nil), "Op")
	proto.RegisterType((*DocState)(nil), "DocState")
	proto.RegisterType((*Nil)(nil), "Nil")
}

func init() { proto.RegisterFile("editor.proto", fileDescriptor_7d780504008e31fd) }

var fileDescriptor_7d780504008e31fd = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x4d, 0xc9, 0x2c,
	0xc9, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x8a, 0xe0, 0x62, 0xf2, 0x2f, 0x10, 0x12,
	0xe2, 0x62, 0x29, 0xa9, 0x2c, 0x48, 0x95, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x02, 0xb3, 0x85,
	0x24, 0xb8, 0xd8, 0xcb, 0x52, 0x8b, 0x8a, 0x33, 0xf3, 0xf3, 0x24, 0x98, 0x14, 0x18, 0x35, 0x98,
	0x83, 0x60, 0x5c, 0x21, 0x01, 0x2e, 0xe6, 0x82, 0xfc, 0x62, 0x09, 0x66, 0xb0, 0x28, 0x88, 0x09,
	0xd2, 0x9f, 0x9c, 0x91, 0x58, 0x24, 0xc1, 0x02, 0xd1, 0x0f, 0x62, 0x2b, 0xd9, 0x70, 0x71, 0xb8,
	0xe4, 0x27, 0x07, 0x97, 0x24, 0x96, 0xa0, 0x98, 0xc5, 0x88, 0x6a, 0x96, 0x18, 0x17, 0x5b, 0x52,
	0x69, 0x5a, 0x5a, 0x6a, 0x11, 0xd8, 0x12, 0x9e, 0x20, 0x28, 0x4f, 0x89, 0x95, 0x8b, 0xd9, 0x2f,
	0x33, 0xc7, 0xc8, 0x8e, 0x8b, 0xcd, 0x15, 0xec, 0x5c, 0x21, 0x09, 0x2e, 0xb6, 0xd0, 0x82, 0x14,
	0x90, 0x61, 0xcc, 0x7a, 0xfe, 0x05, 0x52, 0x20, 0x42, 0x89, 0x41, 0x83, 0xd1, 0x80, 0x51, 0x48,
	0x8a, 0x8b, 0x15, 0x62, 0x0b, 0x8b, 0x9e, 0x5f, 0x66, 0x8e, 0x14, 0xa7, 0x1e, 0xcc, 0x5a, 0x25,
	0x86, 0x24, 0x36, 0xb0, 0x2f, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x30, 0x39, 0x29,
	0xf5, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EditorClient is the client API for Editor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EditorClient interface {
	Update(ctx context.Context, opts ...grpc.CallOption) (Editor_UpdateClient, error)
	State(ctx context.Context, in *Nil, opts ...grpc.CallOption) (*DocState, error)
}

type editorClient struct {
	cc *grpc.ClientConn
}

func NewEditorClient(cc *grpc.ClientConn) EditorClient {
	return &editorClient{cc}
}

func (c *editorClient) Update(ctx context.Context, opts ...grpc.CallOption) (Editor_UpdateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Editor_serviceDesc.Streams[0], "/Editor/Update", opts...)
	if err != nil {
		return nil, err
	}
	x := &editorUpdateClient{stream}
	return x, nil
}

type Editor_UpdateClient interface {
	Send(*Op) error
	Recv() (*Op, error)
	grpc.ClientStream
}

type editorUpdateClient struct {
	grpc.ClientStream
}

func (x *editorUpdateClient) Send(m *Op) error {
	return x.ClientStream.SendMsg(m)
}

func (x *editorUpdateClient) Recv() (*Op, error) {
	m := new(Op)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *editorClient) State(ctx context.Context, in *Nil, opts ...grpc.CallOption) (*DocState, error) {
	out := new(DocState)
	err := c.cc.Invoke(ctx, "/Editor/State", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EditorServer is the server API for Editor service.
type EditorServer interface {
	Update(Editor_UpdateServer) error
	State(context.Context, *Nil) (*DocState, error)
}

// UnimplementedEditorServer can be embedded to have forward compatible implementations.
type UnimplementedEditorServer struct {
}

func (*UnimplementedEditorServer) Update(srv Editor_UpdateServer) error {
	return status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedEditorServer) State(ctx context.Context, req *Nil) (*DocState, error) {
	return nil, status.Errorf(codes.Unimplemented, "method State not implemented")
}

func RegisterEditorServer(s *grpc.Server, srv EditorServer) {
	s.RegisterService(&_Editor_serviceDesc, srv)
}

func _Editor_Update_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(EditorServer).Update(&editorUpdateServer{stream})
}

type Editor_UpdateServer interface {
	Send(*Op) error
	Recv() (*Op, error)
	grpc.ServerStream
}

type editorUpdateServer struct {
	grpc.ServerStream
}

func (x *editorUpdateServer) Send(m *Op) error {
	return x.ServerStream.SendMsg(m)
}

func (x *editorUpdateServer) Recv() (*Op, error) {
	m := new(Op)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Editor_State_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Nil)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EditorServer).State(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Editor/State",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EditorServer).State(ctx, req.(*Nil))
	}
	return interceptor(ctx, in, info, handler)
}

var _Editor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Editor",
	HandlerType: (*EditorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "State",
			Handler:    _Editor_State_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Update",
			Handler:       _Editor_Update_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "editor.proto",
}
